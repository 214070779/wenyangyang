{"remainingRequest":"/Users/yangyangwen/Desktop/wenyangyang/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/yangyangwen/Desktop/wenyangyang/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/yangyangwen/Desktop/wenyangyang/docs/iOS-Summary/Data-encryption.md?vue&type=template&id=21877f82&","dependencies":[{"path":"/Users/yangyangwen/Desktop/wenyangyang/docs/iOS-Summary/Data-encryption.md","mtime":1568205954000},{"path":"/Users/yangyangwen/Desktop/wenyangyang/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yangyangwen/Desktop/wenyangyang/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yangyangwen/Desktop/wenyangyang/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yangyangwen/Desktop/wenyangyang/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yangyangwen/Desktop/wenyangyang/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"数据安全及加密\"><a class=\"header-anchor\" href=\"#数据安全及加密\">#</a> 数据安全及加密</h1>\n<h2 id=\"_1-对称加密和非对称加密的区别？\"><a class=\"header-anchor\" href=\"#_1-对称加密和非对称加密的区别？\">#</a> 1.对称加密和非对称加密的区别？</h2>\n<ul>\n<li>\n<p>1、对称加密又称公开密钥加密，加密和解密都会用到同一个密钥，如果密钥被攻击者获得，此时加密就失去了意义。常见的对称加密算法有DES、3DES、AES、Blowfish、IDEA、RC5、RC6。</p>\n</li>\n<li>\n<p>2、非对称加密又称共享密钥加密，使用一对非对称的密钥，一把叫做私有密钥，另一把叫做公有密钥；公钥加密只能用私钥来解密，私钥加密只能用公钥来解密。常见的公钥加密算法有：RSA、ElGamal、背包算法、Rabin（RSA的特例）、迪菲－赫尔曼密钥交换协议中的公钥加密算法、椭圆曲线加密算法）。</p>\n</li>\n</ul>\n<h2 id=\"_2-简述-ssl-加密的过程用了哪些加密方法，为何这么作？\"><a class=\"header-anchor\" href=\"#_2-简述-ssl-加密的过程用了哪些加密方法，为何这么作？\">#</a> 2.简述 SSL 加密的过程用了哪些加密方法，为何这么作？</h2>\n<p>SSL 加密，在过程中实际使用了 对称加密 和 非对称加密 的结合。主要的考虑是先使用 非对称加密 进行连接，这样做是为了避免中间人攻击秘钥被劫持，但是 非对称加密 的效率比较低。所以一旦建立了安全的连接之后，就可以使用轻量的 对称加密。</p>\n<h2 id=\"_3-ios的签名机制是怎么样的\"><a class=\"header-anchor\" href=\"#_3-ios的签名机制是怎么样的\">#</a> 3.iOS的签名机制是怎么样的</h2>\n<ul>\n<li>\n<p>签名机制：</p>\n<p>先将应用内容通过摘要算法，得到摘要</p>\n<p>再用私钥对摘要进行加密得到密文</p>\n<p>将源文本、密文、和私钥对应的公钥一并发布</p>\n</li>\n<li>\n<p>验证流程：</p>\n<p>查看公钥是否是私钥方的</p>\n<p>然后用公钥对密文进行解密得到摘要</p>\n<p>将APP用同样的摘要算法得到摘要，两个摘要进行比对，如果相等那么一切正常</p>\n</li>\n</ul>\n</div>\n",null]}