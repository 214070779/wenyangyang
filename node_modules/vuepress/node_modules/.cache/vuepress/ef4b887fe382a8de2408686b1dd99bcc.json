{"remainingRequest":"/Users/yangyangwen/Desktop/wenyangyang/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/yangyangwen/Desktop/wenyangyang/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/yangyangwen/Desktop/wenyangyang/docs/iOS-Summary/Source-code.md?vue&type=template&id=072e3bbd&","dependencies":[{"path":"/Users/yangyangwen/Desktop/wenyangyang/docs/iOS-Summary/Source-code.md","mtime":1568205954000},{"path":"/Users/yangyangwen/Desktop/wenyangyang/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yangyangwen/Desktop/wenyangyang/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yangyangwen/Desktop/wenyangyang/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yangyangwen/Desktop/wenyangyang/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yangyangwen/Desktop/wenyangyang/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"源码理解\"><a class=\"header-anchor\" href=\"#源码理解\">#</a> 源码理解</h1>\n<h2 id=\"_1-yykit\"><a class=\"header-anchor\" href=\"#_1-yykit\">#</a> 1.YYKit</h2>\n<p>YYKit 是一组庞大、功能丰富的 iOS 组件。</p>\n<p>我们需要从组件架构，源码，设计思路，解决问题的方案策略等多方面去学习。</p>\n<h2 id=\"_2-sdwebimage加载图片过程\"><a class=\"header-anchor\" href=\"#_2-sdwebimage加载图片过程\">#</a> 2.SDWebImage加载图片过程</h2>\n<ul>\n<li>\n<p>0、首先显示占位图</p>\n</li>\n<li>\n<p>1、在webimagecache中寻找图片对应的缓存，它是以url为数据索引先在内存中查找是否有缓存；</p>\n</li>\n<li>\n<p>2、如果没有缓存，就通过md5处理过的key来在磁盘中查找对应的数据，如果找到就会把磁盘中的数据加到内存中，并显示出来；</p>\n</li>\n<li>\n<p>3、如果内存和磁盘中都没有找到，就会向远程服务器发送请求，开始下载图片；</p>\n</li>\n<li>\n<p>4、下载完的图片加入缓存中，并写入到磁盘中；</p>\n</li>\n<li>\n<p>5、整个获取图片的过程是在子线程中进行，在主线程中显示。</p>\n</li>\n</ul>\n<h2 id=\"_3-yywebimage和sdwebimage对比\"><a class=\"header-anchor\" href=\"#_3-yywebimage和sdwebimage对比\">#</a> 3.YYWebImage和SDWebImage对比</h2>\n<p>。。。</p>\n<h2 id=\"_4-afnetworking-底层原理分析\"><a class=\"header-anchor\" href=\"#_4-afnetworking-底层原理分析\">#</a> 4.AFNetworking 底层原理分析</h2>\n<p>AFNetworking是封装的NSURLSession的网络请求，由五个模块组成：分别由NSURLSession,Security,Reachability,Serialization,UIKit五部分组成</p>\n<ul>\n<li>\n<p>NSURLSession：网络通信模块（核心模块） 对应 AFNetworking中的 AFURLSessionManager和对HTTP协议进行特化处理的AFHTTPSessionManager,AFHTTPSessionManager是继承于AFURLSessionmanager的</p>\n</li>\n<li>\n<p>Security：网络通讯安全策略模块  对应 AFSecurityPolicy</p>\n</li>\n<li>\n<p>Reachability：网络状态监听模块 对应AFNetworkReachabilityManager</p>\n</li>\n<li>\n<p>Seriaalization：网络通信信息序列化、反序列化模块 对应 AFURLResponseSerialization</p>\n</li>\n<li>\n<p>UIKit：对于iOS UIKit的扩展库</p>\n</li>\n</ul>\n</div>\n",null]}