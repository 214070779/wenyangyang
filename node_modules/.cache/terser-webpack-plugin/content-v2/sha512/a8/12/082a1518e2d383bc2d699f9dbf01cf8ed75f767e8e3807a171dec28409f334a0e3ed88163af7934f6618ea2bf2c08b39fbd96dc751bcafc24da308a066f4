{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{212:function(t,i,e){\"use strict\";e.r(i);var r=e(28),o=Object(r.a)({},(function(){var t=this,i=t.$createElement,e=t._self._c||i;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"h1\",{attrs:{id:\"前端异常监控\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#前端异常监控\"}},[t._v(\"#\")]),t._v(\" 前端异常监控\")]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/woai3c/Front-end-articles/blob/master/monitor.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"前端性能和错误监控\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"ascii、gbk、utf、unicode\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ascii、gbk、utf、unicode\"}},[t._v(\"#\")]),t._v(\" Ascii、GBK、UTF、Unicode\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"Ascii（1个字节1个字符）\")]),t._v(\" \"),e(\"li\",[t._v(\"GBK是国内的编码标准（汉字2个字节）\")]),t._v(\" \"),e(\"li\",[t._v(\"Unicode是国际编码标准（统一2个字节表示一个字符）\")]),t._v(\" \"),e(\"li\",[t._v(\"UTF是Unicode实现的另一个标准\")])]),t._v(\" \"),e(\"blockquote\",[e(\"p\",[t._v(\"unicode同样也不完美，这里就有两个的问题，一个是，如何才能区别unicode和ascii？\"),e(\"br\"),t._v(\"\\n由于”半角”英文符号只需要用到低8位，所以其高8位永远是0，因此这种大气的方案在保存英文文本时会多浪费一倍的空间\"),e(\"br\"),t._v(\"\\nunicode在很长一段时间内无法推广，直到互联网的出现，为解决unicode如何在网络上传输的问题，于是面向传输的众多 UTF（UCS Transfer Format）标准出现了，顾名思义，UTF-8就是每次8个位传输数据，而UTF-16就是每次16个位。UTF-8就是在互联网上使用最广的一种unicode的实现方式，这是为传输而设计的编码，并使编码无国界，这样就可以显示全世界上所有文化的字符了。UTF-8最大的一个特点，就是它是一种变长的编码方式。它可以使用1~4个字节表示一个符号，根据不同的符号而变化字节长度，当字符在ASCII码的范围时，就用一个字节表示，保留了ASCII字符一个字节的编码做为它的一部分，注意的是unicode一个中文字符占2个字节，而UTF-8一个中文字符占3个字节）。从unicode到utf-8并不是直接的对应，而是要过一些算法和规则来转换。\")])]),t._v(\" \"),e(\"p\",[t._v(\"https://www.zhihu.com/question/23374078/answer/69732605\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"前端性能优化\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#前端性能优化\"}},[t._v(\"#\")]),t._v(\" 前端性能优化\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"减少 HTTP 请求\")]),t._v(\" \"),e(\"li\",[t._v(\"减少 DOM 操作\")]),t._v(\" \"),e(\"li\",[t._v(\"避免不必要的重绘与重排\")]),t._v(\" \"),e(\"li\",[t._v(\"优化 CSS 选择器（从右向左匹配）\")]),t._v(\" \"),e(\"li\",[t._v(\"CSS/JS minify，减少文件体积\")]),t._v(\" \"),e(\"li\",[t._v(\"开启 Gzip 压缩\")]),t._v(\" \"),e(\"li\",[t._v(\"将 CSS 放到顶部，JavaScript 放到尾部\")]),t._v(\" \"),e(\"li\",[t._v(\"压缩图片以及使用 CSS Sprite\")]),t._v(\" \"),e(\"li\",[t._v(\"使用 CDN 加速，适当进行文件缓存\")]),t._v(\" \"),e(\"li\",[t._v(\"合理控制 cookie 大小（每次请求都会包含 cookie）\")])]),t._v(\" \"),e(\"h4\",{attrs:{id:\"具体请看\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#具体请看\"}},[t._v(\"#\")]),t._v(\" 具体请看\")]),t._v(\" \"),e(\"p\",[t._v(\"http://jinlong.github.io/2017/05/08/optimising-the-front-end-for-the-browser/\")])])}),[],!1,null,null,null);i.default=o.exports}}]);","extractedComments":[]}