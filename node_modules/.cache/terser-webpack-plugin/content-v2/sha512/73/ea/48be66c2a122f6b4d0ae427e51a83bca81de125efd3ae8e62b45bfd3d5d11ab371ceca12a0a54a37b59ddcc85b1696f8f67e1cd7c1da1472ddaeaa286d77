{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{205:function(t,v,_){\"use strict\";_.r(v);var e=_(28),a=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[_(\"h1\",{attrs:{id:\"http\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#http\"}},[t._v(\"#\")]),t._v(\" HTTP\")]),t._v(\" \"),_(\"ul\",[_(\"li\",[_(\"a\",{attrs:{href:\"#RESTful\"}},[t._v(\"RESTful\")])]),t._v(\" \"),_(\"li\",[_(\"a\",{attrs:{href:\"#GET%E5%92%8CPOST%E7%9A%84%E5%8C%BA%E5%88%AB\"}},[t._v(\"GET和POST的区别\")])]),t._v(\" \"),_(\"li\",[_(\"a\",{attrs:{href:\"#Accept%E5%92%8CContent-Type\"}},[t._v(\"Accept和Content-Type\")])]),t._v(\" \"),_(\"li\",[_(\"a\",{attrs:{href:\"#%E7%8A%B6%E6%80%81%E7%A0%81\"}},[t._v(\"状态码\")])]),t._v(\" \"),_(\"li\",[_(\"a\",{attrs:{href:\"#HTTP%E7%BC%93%E5%AD%98\"}},[t._v(\"HTTP缓存\")])]),t._v(\" \"),_(\"li\",[_(\"a\",{attrs:{href:\"#%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86%E4%B8%8D%E8%AE%A9%E5%88%AB%E4%BA%BA%E7%9B%97%E7%94%A8%E4%BD%A0%E7%9A%84%E5%9B%BE%E7%89%87%E8%AE%BF%E9%97%AE%E4%BD%A0%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%B5%84%E6%BA%90\"}},[t._v(\"如何处理不让别人盗用你的图片，访问你的服务器资源\")])]),t._v(\" \"),_(\"li\",[_(\"a\",{attrs:{href:\"#Http%E4%B8%8EHttps%E7%9A%84%E5%8C%BA%E5%88%AB\"}},[t._v(\"Http与Https的区别\")])]),t._v(\" \"),_(\"li\",[_(\"a\",{attrs:{href:\"#%E4%BB%80%E4%B9%88%E6%98%AFHttp%E5%8D%8F%E8%AE%AE%E6%97%A0%E7%8A%B6%E6%80%81%E5%8D%8F%E8%AE%AE%E6%80%8E%E4%B9%88%E8%A7%A3%E5%86%B3Http%E5%8D%8F%E8%AE%AE%E6%97%A0%E7%8A%B6%E6%80%81%E5%8D%8F%E8%AE%AE\"}},[t._v(\"什么是Http协议无状态协议?怎么解决Http协议无状态协议?\")])]),t._v(\" \"),_(\"li\",[_(\"a\",{attrs:{href:\"#%E5%B8%B8%E7%94%A8%E7%9A%84HTTP%E6%96%B9%E6%B3%95%E6%9C%89%E5%93%AA%E4%BA%9B\"}},[t._v(\"常用的HTTP方法有哪些\")])]),t._v(\" \"),_(\"li\",[_(\"a\",{attrs:{href:\"#%E4%B8%80%E6%AC%A1%E5%AE%8C%E6%95%B4%E7%9A%84HTTP%E8%AF%B7%E6%B1%82%E6%89%80%E7%BB%8F%E5%8E%86%E7%9A%847%E4%B8%AA%E6%AD%A5%E9%AA%A4\"}},[t._v(\"一次完整的HTTP请求所经历的7个步骤\")])])]),t._v(\" \"),_(\"h2\",{attrs:{id:\"restful\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#restful\"}},[t._v(\"#\")]),t._v(\" RESTful\")]),t._v(\" \"),_(\"p\",[t._v(\"REST 指的是一组架构约束条件和原则。满足这些约束条件和原则的应用程序或设计就是 RESTful。\")]),t._v(\" \"),_(\"ul\",[_(\"li\",[t._v(\"GET\"),_(\"br\"),t._v(\"\\nget方法在Rest中主要用于获取资源，能够发送参数，不过有限制，且参数都会以?开头的形 式附加在URL尾部。\\n规范的get方法处理器应该是幂等的，也就是说对一个资源不论发送多少次get请求都不会更改数据或造成破坏。\")]),t._v(\" \"),_(\"li\",[t._v(\"POST\"),_(\"br\"),t._v(\"\\npost方法在Rest请求中主要用于添加资源，参数信息存放在请求报文的消息体中相对安全，且可发送较大信息\")]),t._v(\" \"),_(\"li\",[t._v(\"PUT\"),_(\"br\"),t._v(\"\\nput方法在Rest中主要用于更新资源，因为大多数浏览器不支持put和delete，会自动将put和delete请求转化为get和post. 因此为了使用put和delete方法,\\n需要以post发送请求，在表单中使用隐藏域发送真正的请求。\\nput方法的参数是同post一样是存放在消息中的，同样具有安全性，可发送较大信息。\\nput方法是幂等的，对同一URL资源做出的同一数据的任意次put请求其对数据的改变都是一致的。\")]),t._v(\" \"),_(\"li\",[t._v(\"DELETE\"),_(\"br\"),t._v(\"\\nDelete在Rest请求中主要用于删除资源，因为大多数浏览器不支持put和delete，会自动将put和delete请求转化为get和post。\\n因此为了使用put和delete方法,需要以post发送请求，在表单中使用隐藏域发送真正的请求。\\nDelete方法的参数同post一样存放在消息体中,具有安全性，可发送较大信息 Delete方法是幂等的，不论对同一个资源进行多少次delete请求都不会破坏数据\")])]),t._v(\" \"),_(\"p\",[t._v(\"https://blog.csdn.net/jnshu_it/article/details/80203696\")]),t._v(\" \"),_(\"h2\",{attrs:{id:\"get和post的区别\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#get和post的区别\"}},[t._v(\"#\")]),t._v(\" GET和POST的区别\")]),t._v(\" \"),_(\"ul\",[_(\"li\",[t._v(\"GET产生一个TCP数据包；POST产生两个TCP数据包。\")]),t._v(\" \"),_(\"li\",[t._v(\"GET在浏览器回退时是无害的，而POST会再次提交请求。\")]),t._v(\" \"),_(\"li\",[t._v(\"GET产生的URL地址可以被Bookmark，而POST不可以。\")]),t._v(\" \"),_(\"li\",[t._v(\"GET请求会被浏览器主动cache，而POST不会，除非手动设置。\")]),t._v(\" \"),_(\"li\",[t._v(\"GET请求只能进行url编码，而POST支持多种编码方式。\")]),t._v(\" \"),_(\"li\",[t._v(\"GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。\")]),t._v(\" \"),_(\"li\",[t._v(\"GET请求在URL中传送的参数是有长度限制的，而POST么有。\")]),t._v(\" \"),_(\"li\",[t._v(\"对参数的数据类型，GET只接受ASCII字符，而POST没有限制。\")]),t._v(\" \"),_(\"li\",[t._v(\"GET比POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。\")]),t._v(\" \"),_(\"li\",[t._v(\"GET参数通过URL传递，POST放在Request body中。\")])]),t._v(\" \"),_(\"h2\",{attrs:{id:\"accept和content-type\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#accept和content-type\"}},[t._v(\"#\")]),t._v(\" Accept和Content-Type\")]),t._v(\" \"),_(\"p\",[t._v(\"Accept 请求头用来告知客户端可以处理的内容类型，这种内容类型用MIME类型来表示。\\n服务器使用 Content-Type 应答头通知客户端它的选择。\")]),t._v(\" \"),_(\"div\",{staticClass:\"language- line-numbers-mode\"},[_(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[_(\"code\",[t._v(\"Accept: text/html\\nAccept: image/*\\nAccept: text/html, application/xhtml+xml, application/xml;q=0.9, */*;q=0.8\\n\")])]),t._v(\" \"),_(\"div\",{staticClass:\"line-numbers-wrapper\"},[_(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),_(\"br\"),_(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),_(\"br\"),_(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),_(\"br\")])]),_(\"p\",[t._v(\"1.Accept属于请求头， Content-Type属于实体头。 \"),_(\"br\"),t._v(\"\\nHttp报头分为通用报头，请求报头，响应报头和实体报头。 \"),_(\"br\"),t._v(\"\\n请求方的http报头结构：通用报头|请求报头|实体报头 \"),_(\"br\"),t._v(\"\\n响应方的http报头结构：通用报头|响应报头|实体报头\"),_(\"br\")]),t._v(\" \"),_(\"p\",[t._v(\"2.Accept代表发送端（客户端）希望接受的数据类型。 \"),_(\"br\"),t._v(\"\\n比如：Accept：text/xml; \"),_(\"br\"),t._v(\"\\n代表客户端希望接受的数据类型是xml类型\"),_(\"br\")]),t._v(\" \"),_(\"p\",[t._v(\"Content-Type代表发送端（客户端|服务器）发送的实体数据的数据类型。 \"),_(\"br\"),t._v(\"\\n比如：Content-Type：text/html; \"),_(\"br\"),t._v(\"\\n代表发送端发送的数据格式是html。\"),_(\"br\")]),t._v(\" \"),_(\"p\",[t._v(\"二者合起来， \"),_(\"br\"),t._v(\"\\nAccept:text/xml； \"),_(\"br\"),t._v(\"\\nContent-Type:text/html \"),_(\"br\"),t._v(\"\\n即代表希望接受的数据类型是xml格式，本次请求发送的数据的数据格式是html。\"),_(\"br\")]),t._v(\" \"),_(\"h2\",{attrs:{id:\"状态码\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#状态码\"}},[t._v(\"#\")]),t._v(\" 状态码\")]),t._v(\" \"),_(\"table\",[_(\"thead\",[_(\"tr\",[_(\"th\",[t._v(\"状态码\")]),t._v(\" \"),_(\"th\",[t._v(\"类别\")]),t._v(\" \"),_(\"th\",[t._v(\"描述\")])])]),t._v(\" \"),_(\"tbody\",[_(\"tr\",[_(\"td\",[t._v(\"1xx\")]),t._v(\" \"),_(\"td\",[t._v(\"Informational（信息状态码）\")]),t._v(\" \"),_(\"td\",[t._v(\"接受请求正在处理\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[t._v(\"2xx\")]),t._v(\" \"),_(\"td\",[t._v(\"Success（成功状态码）\")]),t._v(\" \"),_(\"td\",[t._v(\"请求正常处理完毕\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[t._v(\"3xx\")]),t._v(\" \"),_(\"td\",[t._v(\"Redirection（重定向状态码）\")]),t._v(\" \"),_(\"td\",[t._v(\"需要附加操作已完成请求\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[t._v(\"4xx\")]),t._v(\" \"),_(\"td\",[t._v(\"Client Error（客户端错误状态码）\")]),t._v(\" \"),_(\"td\",[t._v(\"服务器无法处理请求\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[t._v(\"5xx\")]),t._v(\" \"),_(\"td\",[t._v(\"Server Error（服务器错误状态码）\")]),t._v(\" \"),_(\"td\",[t._v(\"服务器处理请求出错\")])])])]),t._v(\" \"),_(\"p\",[_(\"a\",{attrs:{href:\"#HTTP\"}},[t._v(\"回到顶部\")])]),t._v(\" \"),_(\"h2\",{attrs:{id:\"http缓存\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#http缓存\"}},[t._v(\"#\")]),t._v(\" HTTP缓存\")]),t._v(\" \"),_(\"p\",[t._v(\"https://segmentfault.com/a/1190000010690320\")]),t._v(\" \"),_(\"h2\",{attrs:{id:\"如何处理不让别人盗用你的图片，访问你的服务器资源\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#如何处理不让别人盗用你的图片，访问你的服务器资源\"}},[t._v(\"#\")]),t._v(\" 如何处理不让别人盗用你的图片，访问你的服务器资源\")]),t._v(\" \"),_(\"ul\",[_(\"li\",[t._v(\"http header, 对refer做判断看来源是不是自己的网站，如果不是就拒绝\")]),t._v(\" \"),_(\"li\",[t._v(\"通过session校验，如果不通过特定服务生成cookie和session就不能请求得到资源\")])]),t._v(\" \"),_(\"p\",[_(\"a\",{attrs:{href:\"#HTTP\"}},[t._v(\"回到顶部\")])]),t._v(\" \"),_(\"h2\",{attrs:{id:\"http与https的区别\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#http与https的区别\"}},[t._v(\"#\")]),t._v(\" Http与Https的区别\")]),t._v(\" \"),_(\"ul\",[_(\"li\",[t._v(\"HTTP 的URL 以http:// 开头，而HTTPS 的URL 以https:// 开头\")]),t._v(\" \"),_(\"li\",[t._v(\"HTTP 是不安全的，而 HTTPS 是安全的\")]),t._v(\" \"),_(\"li\",[t._v(\"HTTP 标准端口是80 ，而 HTTPS 的标准端口是443\")]),t._v(\" \"),_(\"li\",[t._v(\"在OSI 网络模型中，HTTP工作于应用层，而HTTPS 的安全传输机制工作在传输层\")]),t._v(\" \"),_(\"li\",[t._v(\"HTTP 无法加密，而HTTPS 对传输的数据进行加密\")]),t._v(\" \"),_(\"li\",[t._v(\"HTTP无需证书，而HTTPS 需要CA机构wosign的颁发的SSL证书\")])]),t._v(\" \"),_(\"p\",[t._v(\"https://zhuanlan.zhihu.com/p/33778904\")]),t._v(\" \"),_(\"p\",[_(\"a\",{attrs:{href:\"#HTTP\"}},[t._v(\"回到顶部\")])]),t._v(\" \"),_(\"h2\",{attrs:{id:\"什么是http协议无状态协议-怎么解决http协议无状态协议\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是http协议无状态协议-怎么解决http协议无状态协议\"}},[t._v(\"#\")]),t._v(\" 什么是Http协议无状态协议?怎么解决Http协议无状态协议?\")]),t._v(\" \"),_(\"p\",[t._v(\"无状态协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息也就是说，\"),_(\"br\"),t._v(\"\\n当客户端一次HTTP请求完成以后，客户端再发送一次HTTP请求，HTTP并不知道当前客户端是一个”老用户“。\"),_(\"br\")]),t._v(\" \"),_(\"p\",[t._v(\"可以使用Cookie来解决无状态的问题，Cookie就相当于一个通行证，第一次访问的时候给客户端发送一个Cookie，\"),_(\"br\"),t._v(\"\\n当客户端再次来的时候，拿着Cookie(通行证)，那么服务器就知道这个是”老用户“。\"),_(\"br\")]),t._v(\" \"),_(\"p\",[t._v(\"https://zhuanlan.zhihu.com/p/33778904\")]),t._v(\" \"),_(\"p\",[_(\"a\",{attrs:{href:\"#HTTP\"}},[t._v(\"回到顶部\")])]),t._v(\" \"),_(\"h2\",{attrs:{id:\"常用的http方法有哪些\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#常用的http方法有哪些\"}},[t._v(\"#\")]),t._v(\" 常用的HTTP方法有哪些\")]),t._v(\" \"),_(\"ul\",[_(\"li\",[t._v(\"GET：用于请求访问已经被URL（统一资源标识符）识别的资源，可以通过URL传参给服务器。\")]),t._v(\" \"),_(\"li\",[t._v(\"POST：用于传输信息给服务器，主要功能与Get方法类似，但一般推荐POST方式。\")]),t._v(\" \"),_(\"li\",[t._v(\"PUT：传输文件，报文主体包含文件内容，保存到对应URL位置。\")]),t._v(\" \"),_(\"li\",[t._v(\"HEAD：获取报文首部，与GET方法类似，只是不返回报文主体，一般用于验证URL是否有效。\")]),t._v(\" \"),_(\"li\",[t._v(\"DELET：删除文件，与PUT方法相反，删除对应URL位置的文件。OPTIONS：查询相应URL支持的HTTP方法。\")])]),t._v(\" \"),_(\"p\",[_(\"a\",{attrs:{href:\"#HTTP\"}},[t._v(\"回到顶部\")])]),t._v(\" \"),_(\"h2\",{attrs:{id:\"一次完整的http请求所经历的7个步骤\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一次完整的http请求所经历的7个步骤\"}},[t._v(\"#\")]),t._v(\" 一次完整的HTTP请求所经历的7个步骤\")]),t._v(\" \"),_(\"p\",[t._v(\"HTTP通信机制是在一次完整的HTTP通信过程中，Web浏览器与Web服务器之间将完成下列7个步骤：\")]),t._v(\" \"),_(\"ul\",[_(\"li\",[t._v(\"建立TCP连接\")])]),t._v(\" \"),_(\"p\",[t._v(\"在HTTP工作开始之前，Web浏览器首先要通过网络与Web服务器建立连接，该连接是通过TCP来完成的，该协议与IP协议共同构建 Internet，即著名的TCP/IP协议族，因此Internet又被称作是TCP/IP网络。HTTP是比TCP更高层次的应用层协议，根据规则， 只有低层协议建立之后才能，才能进行更层协议的连接，因此，首先要建立TCP连接，一般TCP连接的端口号是80。\")]),t._v(\" \"),_(\"ul\",[_(\"li\",[t._v(\"Web浏览器向Web服务器发送请求行\")])]),t._v(\" \"),_(\"p\",[t._v(\"一旦建立了TCP连接，Web浏览器就会向Web服务器发送请求命令。例如：GET /sample/hello.jsp HTTP/1.1。\")]),t._v(\" \"),_(\"ul\",[_(\"li\",[t._v(\"Web浏览器发送请求头\")])]),t._v(\" \"),_(\"p\",[t._v(\"浏览器发送其请求命令之后，还要以头信息的形式向Web服务器发送一些别的信息，之后浏览器发送了一空白行来通知服务器，它已经结束了该头信息的发送。\")]),t._v(\" \"),_(\"ul\",[_(\"li\",[t._v(\"Web服务器应答\")])]),t._v(\" \"),_(\"p\",[t._v(\"客户机向服务器发出请求后，服务器会客户机回送应答， HTTP/1.1 200 OK ，应答的第一部分是协议的版本号和应答状态码。\")]),t._v(\" \"),_(\"ul\",[_(\"li\",[t._v(\"Web服务器发送应答头\")])]),t._v(\" \"),_(\"p\",[t._v(\"正如客户端会随同请求发送关于自身的信息一样，服务器也会随同应答向用户发送关于它自己的数据及被请求的文档。\")]),t._v(\" \"),_(\"ul\",[_(\"li\",[t._v(\"Web服务器向浏览器发送数据\")])]),t._v(\" \"),_(\"p\",[t._v(\"Web服务器向浏览器发送头信息后，它会发送一个空白行来表示头信息的发送到此为结束，接着，它就以Content-Type应答头信息所描述的格式发送用户所请求的实际数据。\")]),t._v(\" \"),_(\"ul\",[_(\"li\",[t._v(\"Web服务器关闭TCP连接\")])]),t._v(\" \"),_(\"p\",[t._v(\"一般情况下，一旦Web服务器向浏览器发送了请求数据，它就要关闭TCP连接，然后如果浏览器或者服务器在其头信息加入了这行代码：\")]),t._v(\" \"),_(\"div\",{staticClass:\"language- line-numbers-mode\"},[_(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[_(\"code\",[t._v(\"Connection:keep-alive\\n\")])]),t._v(\" \"),_(\"div\",{staticClass:\"line-numbers-wrapper\"},[_(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),_(\"br\")])]),_(\"p\",[t._v(\"TCP连接在发送后将仍然保持打开状态，于是，浏览器可以继续通过相同的连接发送请求。保持连接节省了为每个请求建立新连接所需的时间，还节约了网络带宽。\")]),t._v(\" \"),_(\"p\",[t._v(\"建立TCP连接->发送请求行->发送请求头->（到达服务器）发送状态行->发送响应头->发送响应数据->断TCP连接\")]),t._v(\" \"),_(\"p\",[t._v(\"https://juejin.im/post/5a8102e0f265da4e710f5910\")]),t._v(\" \"),_(\"p\",[_(\"a\",{attrs:{href:\"#HTTP\"}},[t._v(\"回到顶部\")])])])}),[],!1,null,null,null);v.default=a.exports}}]);","extractedComments":[]}